/****** overlay ******/
$areaGap: 10px;

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: background-color 1s;
}

.overlay__main-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    color: #fff;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
}

@each $category in $categoryList {
    $categoryColor: nth($categoryColorList2, index($categoryList, $category));

    .overlay.tgl_category-#{$category} {
        background: #{$categoryColor};
    }
}

.overlay__main {
    padding: 80px 10% 90px;
    display: grid;
    grid-template-areas:
    "elm knj"
    "elm rdn"
    "elm nam"
    "twi twi"
    "cls cls";
    grid-template-rows: repeat(6, auto);
    grid-template-columns: 5fr 6fr;
    @include gridGap($areaGap, $areaGap);
    @include mediaQuery(1150px) {
        padding: 80px 50px 90px;
    }
    @include mediaQuery($tablet) {
        padding: 80px 50px 90px;
        grid-template-areas:
        "elm"
        "nam"
        "knj"
        "rdn"
        "twi"
        "cls";
        grid-template-rows: repeat(8, auto);
        grid-template-columns: auto;
    }
    @include mediaQuery() {
        padding: 80px 15px 90px;
    }
}

.overlay__main * {
    line-height: 100%;
}

.overlay__close-button {
    position: fixed;
    top: 20px;
    right: 50px;
    width: 50px;
    height: 50px;
    @include flexCentering();
    cursor: pointer;
    ion-icon {
        font-size: 50px;
        color: rgba(255, 255, 255, 0.9);
        filter: drop-shadow(0 0 10px rgba(0, 0, 0, 0.7));
    }
    &:hover {
        transform: scale(1.1);
    }
    transition: .3s;
    @include mediaQuery() {
        right: 20px;
    }
}

.overlay__container.mod_base {
    grid-area: elm;
    display: grid;
    grid-template-areas:
        "es an"
        "es pr"
        "es gr"
        "ca aw";
    grid-template-rows: repeat(4, 1fr);
    grid-template-columns: 2fr 1fr;
    @include gridGap($areaGap, $areaGap);
    @include mediaQuery() {
        grid-template-areas:
            "es es es"
            "an pr gr"
            "ca ca aw";
        grid-template-rows: auto 1fr 1fr;
        grid-template-columns: repeat(3, 1fr);
    }
}

.overlay__container.mod_kanji {
    grid-area: knj;
    display: grid;
    grid-template-areas:
        "cn tw hk";
    grid-template-rows: 1fr;
    grid-template-columns: repeat(3, 1fr);
    @include gridGap($areaGap, $areaGap);
}

.overlay__container.mod_reading {
    grid-area: rdn;
    display: grid;
    grid-template-areas:
        "py bp";
    grid-template-rows: auto;
    grid-template-columns: repeat(2, 1fr);
    @include gridGap($areaGap, $areaGap);
}

.overlay__container.mod_name {
    grid-area: nam;
    display: grid;
    grid-template-areas:
        "ja en";
    grid-template-rows: auto;
    grid-template-columns: repeat(2, 1fr);
    @include gridGap($areaGap, $areaGap);
    @include mediaQuery($se) {
        grid-template-columns: repeat(2, auto);
    }
}

.overlay__container.mod_element-changer {
    position: fixed;
    box-sizing: border-box;
    left: 0;
    bottom: 20px;
    padding: 0 20%;
    width: 100%;
    height: 70px;
    @include mediaQuery($tablet) {
        padding: 0 50px;
    }
    @include mediaQuery() {
        padding: 0 15px;
    }
}

.overlay__container.mod_tweet {
    grid-area: twi;
}

.overlay__container.mod_close {
    grid-area: cls;
}

.overlay__area.mod_element-symbol {
    grid-area: es;
}

.overlay__area.mod_atomic-num {
    grid-area: an;
}
.overlay__area.mod_period {
    grid-area: pr;
}
.overlay__area.mod_group {
    grid-area: gr;
}

.overlay__area.mod_cn {
    grid-area: cn;
}
.overlay__area.mod_tw {
    grid-area: tw;
}
.overlay__area.mod_hk {
    grid-area: hk;
}

.overlay__area.mod_pinyin {
    grid-area: py;
}
.overlay__area.mod_bopomofo {
    grid-area: bp;
}

.overlay__area.mod_atomic-weight {
    grid-area: aw;
}
.overlay__area.mod_category {
    grid-area: ca;
}

.overlay__area.mod_japanese-name {
    grid-area: ja;
}
.overlay__area.mod_english-name {
    grid-area: en;
}
